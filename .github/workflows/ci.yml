# Optimized CI workflow - most validation now happens locally via pre-commit hooks
# This runs lightweight checks since pre-commit validation ensures code quality
#
# Jobs:
# - validate & build: Always run in parallel (fast, 2-3 minutes total)
# - test: Only runs on PRs or when commit message contains [run-tests]

name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Optimize for speed - run jobs in parallel where possible
jobs:
  # Fast validation job - runs first as a gate
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint check
        run: npm run lint

  # Build job - runs in parallel with validate
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build production
        run: npm run build

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: dist/
          retention-days: 7

  # Test job - only runs on PRs or when explicitly requested with [run-tests] in commit message
  test:
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 15
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && contains(github.event.head_commit.message, '[run-tests]'))
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run Tests
        run: npm test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 3
